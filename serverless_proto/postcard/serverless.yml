# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: postcard

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

plugins:
  - serverless-secrets-plugin
  - serverless-finch

custom:
  bucket: postcard-photo-bucket
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}
  client:
      bucketName: cheekii-co-static-website
      distributionFolder: client/dist # (Optional) The location of your website. This defaults to client/dist

provider:
  name: aws
  runtime: java8
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
#    - Effect: Allow
#      Action:
#        - s3:GutObject
#      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

# you can add packaging information here
package:
  artifact: build/distributions/hello.zip

functions:
  processOrder:
    handler: com.serverless.Handler
    timeout: 15
    events:
      - http:
          path: processOrder
          method: POST
          cors: true
    environment:
      STRIPE_SECRET_KEY: ${self:custom.secrets.STRIPE_SECRET_KEY}
      LOB_SECRET_KEY: ${self:custom.secrets.LOB_SECRET_KEY}
      LOB_API_VERSION: 2017-11-08
      LOB_FRONT_TEMPLATE_ID: tmpl_2cccd5a52ae91e9
      LOB_BACK_TEMPLATE_ID: tmpl_5de47ab0860d3be
      POSTCARD_PRICE: 1000
      POSTCARD_CURRANCY: cad
      DISCOUNT_CODE: ${self:custom.secrets.DISCOUNT_CODE}
      BUCKET: ${self:custom.bucket}

# you can add CloudFormation resource templates here
resources:
  Resources:
    PhotoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        AccessControl: PublicRead
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: PhotoBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucket}/*


#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
